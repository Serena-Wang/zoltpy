"""
Django settings for forecast_repo project.

Generated by 'django-admin startproject' using Django 1.11.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

from django.conf import settings


#
# directories
#

BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
PROJECT_ROOT = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = ...  # set by 'children' modules that: from .base import *

INSTALLED_APPS = [
    'forecast_app.apps.ForecastAppConfig',
]

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/New_York'

USE_L10N = True

USE_TZ = True

if not settings.DEBUG:  # NB: requires "children" settings to set DEBUG before importing
    SECURE_SSL_REDIRECT = True

#
# set up logging - https://stackoverflow.com/questions/5137042/how-can-i-get-django-to-print-the-debug-information-to-the-console
# note: According to docs, I should not have to specify this - default should be to log everything INFO and higher to
# console - https://docs.djangoproject.com/en/1.11/topics/logging/#default-logging-configuration
#

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        },
    },
    'handlers': {
        'console': {
            'level': 'NOTSET',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose'
        }
    },
    'loggers': {
        '': {
            'handlers': ['console'],
            'level': 'NOTSET',
        },
    }
}

#
# set configurable zoltar variables
#

# number of rows beyond which `query_forecasts_for_project()` raises a "too many rows" error
MAX_NUM_QUERY_ROWS = 200_000

if 'MAX_NUM_QUERY_ROWS' in os.environ:
    max_num_query_rows_value = os.environ.get('MAX_NUM_QUERY_ROWS')
    try:
        MAX_NUM_QUERY_ROWS = float(max_num_query_rows_value)
    except ValueError:
        raise RuntimeError(f"base.py: MAX_NUM_QUERY_ROWS config var could not be coerced to float: "
                           f"{max_num_query_rows_value!r}")
